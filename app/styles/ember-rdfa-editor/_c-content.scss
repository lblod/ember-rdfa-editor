/* ==================================
   #SAY CONTENT STYLES
   ================================== */

/* Variables
  ========================================================================== */

$say-font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto,
  Helvetica, Arial, sans-serif !default;
$say-h1-font-family: var(--au-font) !default;
$say-h1-font-weight: var(--au-medium) !default;
$say-h1-font-size: $au-h1 !default;
$say-h2-font-family: var(--au-font) !default;
$say-h2-font-weight: var(--au-medium) !default;
$say-h2-font-size: $au-h2 !default;
$say-h3-font-family: var(--au-font) !default;
$say-h3-font-weight: var(--au-medium) !default;
$say-h3-font-size: $au-h3 !default;
$say-h4-font-family: var(--au-font) !default;
$say-h4-font-weight: var(--au-medium) !default;
$say-h4-font-size: $au-h4 !default;
$say-h5-font-family: var(--au-font) !default;
$say-h5-font-weight: var(--au-medium) !default;
$say-h5-font-size: $au-h5 !default;
$say-h6-font-family: var(--au-font) !default;
$say-h6-font-weight: var(--au-medium) !default;
$say-h6-font-size: $au-h6 !default;
$say-base-font-family: var(--au-font) !default;
$say-base-font-weight: var(--au-regular) !default;
$say-small-font-size: $au-base !default;
$say-smaller-font-size: 1.4rem !default;
$say-smallest-font-size: 1.2rem !default;
$say-typography-margin: $au-unit-small !default;
$say-editor-private-color: var(--au-gray-900) !default;
$say-editor-highlight-color: var(--au-gray-100) !default;
$say-editor-highlight-hover-color: var(--au-gray-200) !default;

/* Component
  ========================================================================== */

.say-content {
  // Set base font size for elements
  &,
  ul,
  ol,
  div {
    @include au-font-size($au-base);
    font-family: var(--au-font);
    font-weight: var(--au-regular);
  }

  span,
  a {
    font-size: inherit;
  }

  h1,
  .h1 {
    @include au-font-size($say-h1-font-size, 1.1);
    font-family: $say-h1-font-family;
    font-weight: $say-h1-font-weight;
  }

  h2,
  .h2 {
    @include au-font-size($say-h2-font-size, 1.3);
    font-family: $say-h2-font-family;
    font-weight: $say-h2-font-weight;
  }

  h3,
  .h3 {
    @include au-font-size($say-h3-font-size, 1.3);
    font-family: $say-h3-font-family;
    font-weight: $say-h3-font-weight;
  }

  h4,
  .h4 {
    @include au-font-size($say-h4-font-size);
    font-family: $say-h4-font-family;
    font-weight: $say-h4-font-weight;
  }

  h5,
  .h5 {
    @include au-font-size($say-h5-font-size);
    font-family: $say-h5-font-family;
    font-weight: $say-h5-font-weight;
  }

  h6,
  .h6 {
    @include au-font-size($say-h6-font-size);
    font-family: $say-h6-font-family;
    font-weight: $say-h6-font-weight;
  }

  p,
  li {
    &.small {
      @include au-font-size($say-small-font-size);
    }

    &.smaller {
      @include au-font-size($say-smaller-font-size, 1.5);
    }

    &.smallest {
      @include au-font-size($say-smallest-font-size, 1.5);
    }
  }

  // Setup some margin rules
  //p + *,
  div + *,
  span + *,
  ul + *,
  ol + *,
  i + * {
    margin-top: $say-typography-margin;
  }

  // No margin
  p * + *,
  p + br,
  div + br,
  span + br,
  ul + br,
  ol + br,
  i + br,
  br + br {
    margin-top: 0;
  }

  h1,
  .h1 {
    margin-top: $say-typography-margin * 2;
    margin-bottom: $say-typography-margin * 2;
  }

  h2,
  .h2,
  h3,
  .h3,
  h4,
  .h4,
  h5,
  .h5,
  h6 {
    margin-top: $say-typography-margin * 2;
    margin-bottom: $say-typography-margin;
  }

  // Style links
  a {
    transition: color var(--au-transition), text-decoration var(--au-transition);
    font-weight: var(--au-regular);
    text-decoration-color: var(--au-blue-300);

    &,
    &:visited {
      color: var(--au-blue-700);
    }

    &:hover,
    &:focus {
      color: var(--au-blue-600);
      text-decoration-color: var(--au-blue-300);
    }

    &:focus {
      outline: var(--au-outline);
      outline-offset: $au-unit-tiny * 0.5;
    }
  }

  // Style lists
  ul,
  ul.bullet-list {
    list-style-type: initial;

    ul {
      margin-left: $au-unit-small;
    }

    // Stop indenting
    ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul {
      margin-left: 0;
    }
  }

  ul.bullet-list {
    padding-left: 0;
  }

  ol,
  ol.numbered-list {
    list-style-type: decimal;

    ol {
      margin-left: $au-unit-small;
    }

    // Stop indenting
    ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol {
      margin-left: 0;
    }
  }

  ol.numbered-list {
    padding-left: 0;
  }

  ul.article-list {
    padding-left: 0;

    li {
      margin-bottom: 1.5rem;
      list-style-type: unset;
    }
  }

  ul > li {
    > ul li {
      list-style-type: circle;
    }

    > ul ul li {
      list-style-type: square;
    }

    > ul ul ul li {
      list-style-type: initial;
    }

    > ul ul ul ul li {
      list-style-type: circle;
    }

    > ul ul ul ul ul li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul li {
      list-style-type: square;
    }
  }

  // Style horizontal rule
  hr {
    margin: 0;
    margin-top: $au-unit;
    margin-bottom: $au-unit;
    border: 0;
    border-bottom: 3px solid var(--au-gray-200);
  }

  // Add custom font styling
  strong,
  b {
    font-weight: var(--au-bold);
  }

  em {
    font-style: italic;
  }

  i {
    display: inline-block;
  }

  sub {
    vertical-align: sub;
    font-size: smaller;
  }

  sup {
    vertical-align: super;
    font-size: smaller;
  }

  // Table styling
  table th {
    white-space: initial;
    background-color: var(--au-white);
  }

  .data-table th,
  .data-table td {
    @include au-font-size($au-base, 1.5);
  }

  .data-table--lined.data-table--tight {
    th,
    td {
      font-size: 1.4rem;
      padding: 0.8rem;
    }

    .button--small {
      font-size: 1.3rem;
      font-weight: 400;
    }

    .button-group .button {
      margin-bottom: 0.5rem;
    }
  }

  // Imported HTML - Used for tables
  [property="http://lblod.data.gift/vocabularies/editor/isLumpNode"]
  {
    position: relative;
    background-color: var(--au-gray-200);
    border-radius: 0.2rem;
    outline: 2px dashed var(--au-gray-300);
    outline-offset: 0.2rem;
    margin-top: 1.2rem;
    margin-bottom: 1.2rem;
    display: table;
    width: 100%;

    & [property="http://lblod.data.gift/vocabularies/editor/isLumpNode"]
    {
      outline: 0;
      margin: 0;
    }

    // Reset some table styles
    th {
      font-weight: var(--au-medium);
      border-bottom: 1px solid var(--au-gray-300);
    }

    th,
    td {
      text-align: left;
      vertical-align: top;
      padding: 0.6rem;
      background-color: transparent !important;
      border: 1px solid var(--au-gray-300);
    }

    // Style links as plain text
    a {
      &,
      &:hover,
      &:visited,
      &:focus {
        color: var(--au-gray-800);
        text-decoration: none;
      }

      &:focus {
        outline: 0;
      }
    }

    // Style lists
    ul,
    ol {
      margin-left: $au-unit-small + $au-unit-tiny;
    }
  }

  .trailing br {
    display: none;
  }

  [property="http://lblod.data.gift/vocabularies/editor/isLumpNode"],
  [property="http://lblod.data.gift/vocabularies/editor/isLumpNode"] *
  {
    font-size: 1.5rem; // Set global font-size
    cursor: not-allowed; // Show not-allowed cursor
    user-select: none; // Disable selection
  }

  // Don't show certain properties
  [property='besluit:gebeurtNa'],
  [property='besluit:aangebrachtNa'],
  [property='eli:language'],
  [typeof='ext:TasklistData'],
  [class='ext_scroll_to'],
  [property='ext:variableState'],
  [property='ext:idInSnippet'],
  [property='ext:intentionUri'],
  [typeof='ext:Variable'],
  [property='ext:metadata'] {
    display: none !important;
  }

  // Structures
  [property="say:hasPart"] + [property="say:hasPart"] {
    margin-top: $au-unit-small;
  }

  [property="say:hasPart"] [property="say:hasPart"],
  [property="say:hasPart"] [property="eli:has_part"] {
    margin-left: $au-unit-tiny;
  }

  [typeof="besluit:Artikel"] >[property='say:heading'],
  [typeof="say:Article"] >[property='say:heading'] {
    font-weight: var(--au-medium);
  }
}

